name: CI

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: 'Y'
          SA_PASSWORD: 'Your_str0ng_P@ssword'
        ports:
          - 1433:1433
        options: >-
          --health-cmd " /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_str0ng_P@ssword -Q \"SELECT 1\""
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]
        node-version: [ '20' ]

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: readify-frontend/package-lock.json

    - name: Install frontend deps
      working-directory: readify-frontend
      run: npm ci

    - name: Build frontend
      working-directory: readify-frontend
      run: npm run build --if-present

    - name: Restore backend
      run: dotnet restore

    - name: Install EF tool
      run: dotnet tool install --global dotnet-ef --version 8.*

    - name: Apply EF Migrations
      env:
        ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=ReadifyDb;User Id=sa;Password=Your_str0ng_P@ssword;TrustServerCertificate=True"
      run: |
        dotnet ef database update --project Readify --startup-project Readify --context AppDbContext

    - name: Build backend
      run: dotnet build --configuration Release

    - name: Run unit/integration tests with coverage
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" Readify.Tests/Readify.Tests.csproj

    - name: Run Cypress E2E (matrix 1)
      working-directory: readify-frontend
      env:
        ANGULAR_ENV: test
      run: |
        npx cypress run --spec "cypress/e2e/add_checkout_verify_stock.cy.js"

    - name: Run Cypress E2E (matrix 2)
      working-directory: readify-frontend
      env:
        ANGULAR_ENV: test
      run: |
        npx cypress run --spec "cypress/e2e/admin-create.cy.js"

  docker-push:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Readify/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/readify-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: readify-frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/readify-frontend:latest
